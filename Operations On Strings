#include<stdio.h>
#include<string.h>

void substring(char a[50],char b[50]);
void palindrome(char a[50]);
void length(char a[50]);
void reverse(char a[50]);
void copy(char a[50],char b[50]);
int compare(char a[50],char b[50]);
void ptrPalindrome(char *ptr_a);
void ptrLength(char *ptr_a);
void ptrreverse(char *ptr_a);
void PtrCopy(char *ptr_a,char *ptr_b);
int Ptrcompare(char *ptr_a,char *ptr_b);


void main()
{
 char a[50],b[50];
 char *ptr_a,*ptr_b;
 int m;
 ptr_a=a;
 ptr_b=b;
 
 
 int ch;
 while(1)
 {
 printf("\n********ENTER YOUR CHOICE********\n1:Substring without pointers\n2:string Palindrome without pointer\n3:string length without pointer\n4:String Reverse without pointer\n5:string Copy without pointer\n6:string Compare without pointers\n7:string Palindrome with pointers\n8:string Length with pointer\n9:string reverse with pointer\n10:string Copy with pointer\n11:string compare with pointer\n12:Exit\n");
 scanf("%d",&ch);
 switch(ch)
 { 
 case 1:
 printf("\n Enter the 1st string:");
 scanf("%s",a);
 printf("\n Enter the 2nd string:");
 scanf("%s",b);
 substring(a,b);
 break;
 
 case 2:
 printf("\n Enter the string:");
 scanf("%s",a);
 palindrome(a);
 break;
 
 case 3:
 printf("\n Enter the string:");
 scanf("%s",a);
 length(a);
 break;

 case 4:
 printf("\n Enter the string:");
 scanf("%s",a);
 reverse(a);
 break;
 
 case 5:
 printf("\n Enter the 1st string:");
 scanf("%s",a);
 printf("\n Enter the 2nd string:");
 scanf("%s",b);
 copy(a,b);
 break;
 
 case 6:
 printf("Enter 1st string\n");
 scanf("%s",a);
 printf("Enter 2nd string\n");
 scanf("%s",b);
 printf("Comparing strings\n");
 m=compare(a,b);
 if(m==1)
 printf("Strings are not equal\n");
 else
 printf("Strings are equal\n");
 break;	
 
 case 7:
 printf("\n Enter the string:");
 scanf("%s",ptr_a);
 palindrome(ptr_a);
 break;
 
 case 8:
 printf("\n Enter the string:");
 scanf("%s",ptr_a);
 length(ptr_a);
 break;
 
 case 9:
 printf("\n Enter the string:");
 scanf("%s",ptr_a);
 ptrreverse(ptr_a);
 break;
 
 case 10:
 printf("\n Enter the 1st string:");
 scanf("%s",ptr_a);
 printf("\n Enter the 2nd string:");
 scanf("%s",ptr_b);
 copy(ptr_a,ptr_b);
 break;
 
 case 11:
 printf("\n Enter the 1st string:");
 scanf("%s",ptr_a);
 printf("\n Enter the 2nd string:");
 scanf("%s",ptr_b);
 if(ptrcompare(ptr_a,ptr_b)==0)
 {
  printf("strings are equal");
 }
 else
 {
  printf("strings are not equal");
 }
 break;
 
 case 12:
 exit(0);
 break;
 
 default:
 printf("\nEnter valid choice");
 break;
 
}
}
}

void substring(char a[50],char b[50])
{
 int i=0,j=0,k=0;
 while(a[i]!='\0'&& b[j]!='\0')
 {
 i=k;
 j=0;
 while(a[i]!='\0'&& b[j]!='\0')
 {
   if(a[i]!=b[j])
   {
   k++;
   break;
   }
   else
   {
   i++;
   j++;
   }
 }
}
   if(b[j]=='\0')
   printf("\nsubstring is present\n");
   else
   printf("substring is not present\n");
   }

 void palindrome(char a[50])
 {
 int i,j;
 for(j=0;a[j]!='\0';j++);
 j--;
 i=0;
 while(i<j)
 {
  if(a[i++]!=a[j--])
  {
   printf("string is not a palindrome\n");
   break;
   }
   
   else
   
   printf("string is palindrome\n");
   }
   }
   
 void length(char a[50])
 {
 int i;
 for(i=0;a[i]!='\0';i++);
 {
 printf("%d\n",i);
 }
 }
 
 void reverse(char a[50])
 {
 int i,j;
 char temp;
 j=0;
 while(a[j]!='\0')
 {
  j=j+1;
 }
  j=j-1;
  i=0;
  while(i<j)
  {
        temp=a[i];
		a[i]=a[j];
		a[j]=temp; 
       i++;
       j--;
  }
printf("\nReversed string is:%s",a);
}
  
void copy(char a[50], char b[50])
  {
   int i;
   for(i=0;a[i]!='\0';i++)
   b[i]=a[i];
   b[i]='\0';
   printf("\n Copied string is\n%s",b);
 }
 int compare(char a[50],char b[50])
{
    int i,flag=0;
	for(i=0;a[i]!='\0';i++)
	{
		if(a[i]!=b[i])
		{flag=1;}
	}
	return flag;
}
void ptrpalindrome(char ptr_a)
 {
 char ptr_b;
 int i,j;
 for(ptr_a=0;ptr_a!='\0';ptr_a++);
 ptr_a--;
 ptr_a=0;
 while(ptr_a<ptr_b)
 {
  if(ptr_b++!=ptr_a--)
  {
   printf("string is not a palindrome..\n");
   break;
   }
   
   else
   
   printf("string is palindrome\n");
   }
   }
void ptrLength(char *ptr_a)
 {
 
 for(ptr_a=0;ptr_a!='\0';ptr_a++);
 {
 printf("%d\n",ptr_a);
 }
 }

void ptrreverse(char *ptr_a)
{
	char temp;
	char *ptr_a1;
	
	ptr_a1=ptr_a;
	
   while(*ptr_a1!='\0')
   {
    ptr_a1++;
   }
   ptr_a1--;
   while(ptr_a<ptr_a1)
   {
        temp=*ptr_a;
		*ptr_a=*ptr_a1;
		*ptr_a1=temp;
        ptr_a++;
        ptr_a1--;
   }
   printf("\nReversed string is:%s",ptr_a);
}
 
 
int ptrcompare(char *ptr_a,char *ptr_b)
{
 while(*ptr_a!='\0'&&*ptr_b!='\0')
 {
  if(*ptr_a!=*ptr_b)
  {
   break;
  }
  ptr_a++; 
  ptr_b++;
 }

return(*ptr_a-*ptr_b);
}
